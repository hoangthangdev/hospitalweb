name: dockercompose15466942793411098815
services:
  app:
    build:
      context: D:\hospitalweb\HospitalWebAPI
      dockerfile: HospitalWebAPI/Dockerfile
    container_name: dotnet-app
    depends_on:
      elasticsearch:
        condition: service_started
        required: true
      redis:
        condition: service_started
        required: true
      sqlserver:
        condition: service_started
        required: true
    environment:
      ConnectionStrings__DefaultConnection: Server=sqlserver;Database=hospitalDb;User Id=sa;Password=hospotal123@;TrustServerCertificate=True;
      ElasticSearch__Url: http://elasticsearch:9200
      Redis__Connection: redis:6379
    networks:
      mynetwork: null
    ports:
      - mode: ingress
        target: 8080
        published: "8080"
        protocol: tcp
  elasticsearch:
    container_name: elasticsearch
    environment:
      ES_JAVA_OPTS: -Xms512m -Xmx512m
      discovery.type: single-node
    image: docker.elastic.co/elasticsearch/elasticsearch:8.5.0
    networks:
      mynetwork: null
    ports:
      - mode: ingress
        target: 9200
        published: "9200"
        protocol: tcp
      - mode: ingress
        target: 9300
        published: "9300"
        protocol: tcp
  redis:
    container_name: redis
    image: redis:latest
    networks:
      mynetwork: null
    ports:
      - mode: ingress
        target: 6379
        published: "6379"
        protocol: tcp
  sqlserver:
    container_name: sqlserver
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: hospotal123@
    image: mcr.microsoft.com/mssql/server:2022-latest
    networks:
      mynetwork: null
    ports:
      - mode: ingress
        target: 1433
        published: "1433"
        protocol: tcp
networks:
  mynetwork:
    name: dockercompose15466942793411098815_mynetwork
    driver: bridge